import{_ as a,c as n,o as s,a2 as e}from"./chunks/framework.DlC1fzyH.js";const m=JSON.parse('{"title":"项目组织规范","description":"","frontmatter":{},"headers":[],"relativePath":"web/chapter4.md","filePath":"web/chapter4.md"}'),p={name:"web/chapter4.md"},l=e(`<h1 id="项目组织规范" tabindex="-1">项目组织规范 <a class="header-anchor" href="#项目组织规范" aria-label="Permalink to &quot;项目组织规范&quot;">​</a></h1><p>项目组织规范定义了如何组织一个前端项目, 例如项目的命名、项目的文件结构、版本号规范等等。尤其对于开源项目，规范化的项目组织就更重要了。</p><h2 id="通用的项目组织规范" tabindex="-1">通用的项目组织规范 <a class="header-anchor" href="#通用的项目组织规范" aria-label="Permalink to &quot;通用的项目组织规范&quot;">​</a></h2><p>一个典型的项目组织规范如下:</p><ul><li><p><strong>dist/</strong>: 项目构建结果输出目录。</p></li><li><p><strong>public/</strong>: HTML 和静态资源。</p></li><li><p><strong>src/</strong>: 源代码目录。</p></li><li><p><strong>.env*</strong>: 项目中我们通常会使用<code>环境变量</code>来影响应用在不同运行环境下的行为。可以通过<a href="https://github.com/motdotla/dotenv" target="_blank" rel="noreferrer">dotEnv</a>来从文件中读取环境变量。通常有三个文件:</p><ul><li><code>.env.dev</code> 测试生产环境的环境变量</li><li><code>.env.development</code> 开发环境的环境变量</li><li><code>.env.production</code> 正式生成环境的环境变量</li></ul></li><li><p><strong>.gitignore</strong>: 忽略不必要的文件，避免将自动生成的文件提交到版本库。</p></li><li><p><strong>README.md</strong>: 项目说明，可以在这里提供关于项目的关键信息或者相关信息的入口。</p></li><li><p><strong>package.json</strong>: 前端项目必须。描述当前的版本、<strong>可用的命令</strong>、包名、依赖、环境约束、项目配置等信息。</p></li></ul><h2 id="目录组织风格" tabindex="-1">目录组织风格 <a class="header-anchor" href="#目录组织风格" aria-label="Permalink to &quot;目录组织风格&quot;">​</a></h2><p>目前前端项目主要基于 <code>vue-cli</code> 脚手架二次定制，具体目录结构如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>├── deploy                   # node部署相关配置文件</span></span>
<span class="line"><span>├── public</span></span>
<span class="line"><span>│   └── favicon.ico          # LOGO</span></span>
<span class="line"><span>|   └── index.html           # Vue 入口模板</span></span>
<span class="line"><span>├── src</span></span>
<span class="line"><span>│   ├── api                  # Api 模块</span></span>
<span class="line"><span>│   ├── assets               # 本地静态资源</span></span>
<span class="line"><span>│   ├── components           # 业务通用组件</span></span>
<span class="line"><span>│   ├── configs              # 项目基础配置，包含路由守卫、过滤器、UI 库引用等</span></span>
<span class="line"><span>│   ├── layouts              # 页面Layout组件</span></span>
<span class="line"><span>│   ├── mixins               # Vue mixins 封装</span></span>
<span class="line"><span>│   ├── router               # Vue-Router 配置</span></span>
<span class="line"><span>│   ├── store                # Vuex 配置</span></span>
<span class="line"><span>│   ├── theme                # UI 库主题配置</span></span>
<span class="line"><span>│   ├── utils                # 工具库，包含常用工具函数、常量配置、过滤器函数、ajax拦截器封装等</span></span>
<span class="line"><span>│   ├── pages                # 业务页面入口和常用模板</span></span>
<span class="line"><span>│   ├── App.vue              # Vue 模板入口</span></span>
<span class="line"><span>│   └── main.js              # Vue 入口 JS</span></span>
<span class="line"><span>├── .browserslistrc          # 目标浏览器配置</span></span>
<span class="line"><span>├── .commitlintrc.js         # commitlint 配置</span></span>
<span class="line"><span>├── .editorconfig            # 编辑器配置</span></span>
<span class="line"><span>├── .env.dev                 # 测试打包环境变量配置</span></span>
<span class="line"><span>├── .env.development		 # 开发环境变量配置</span></span>
<span class="line"><span>├── .env.production          # 正式打包环境变量配置</span></span>
<span class="line"><span>├── .eslintignore            # eslint 忽略文件配置</span></span>
<span class="line"><span>├── .eslintrc.js             # eslint 配置</span></span>
<span class="line"><span>├── .gitignore               # git 忽略文件配置</span></span>
<span class="line"><span>├── .stylelintrc.js          # stylelint 忽略文件配置</span></span>
<span class="line"><span>├── .stylelintrc.js          # stylelint 配置</span></span>
<span class="line"><span>├── alias.config.js          # webpack alias识别文件</span></span>
<span class="line"><span>├── babel.config.js          # babel 配置</span></span>
<span class="line"><span>├── deploy.config.js         # node 部署配置文件</span></span>
<span class="line"><span>├── jsconfig.json            # jsconfig 配置</span></span>
<span class="line"><span>├── dev.sh                   # 测试打包脚本</span></span>
<span class="line"><span>├── pro.sh                   # 正式打包脚本</span></span>
<span class="line"><span>├── package.json             # 项目描述文件</span></span>
<span class="line"><span>├── postcss.config.js        # postcss 配置</span></span>
<span class="line"><span>├── README.md                # 项目说明</span></span>
<span class="line"><span>└── vite.config.ts            # Vue CLI 配置</span></span></code></pre></div><h2 id="项目模板" tabindex="-1">项目模板 <a class="header-anchor" href="#项目模板" aria-label="Permalink to &quot;项目模板&quot;">​</a></h2><p>在将项目结构规范确定下来后，可以创建自己的脚手架工具或者项目模板，用于快速初始化一个项目或代码模板。</p><h3 id="中后台项目模板" tabindex="-1">中后台项目模板 <a class="header-anchor" href="#中后台项目模板" aria-label="Permalink to &quot;中后台项目模板&quot;">​</a></h3><p><a href="https://github.com/wkl007/ant-design-vue-admin" target="_blank" rel="noreferrer">ant-design-vue-admin</a></p><h3 id="大屏可视化项目模板" tabindex="-1">大屏可视化项目模板 <a class="header-anchor" href="#大屏可视化项目模板" aria-label="Permalink to &quot;大屏可视化项目模板&quot;">​</a></h3><p><a href="https://github.com/wkl007/datav-template" target="_blank" rel="noreferrer">datav-template</a></p><h3 id="uni-app-项目模板" tabindex="-1">uni-app 项目模板 <a class="header-anchor" href="#uni-app-项目模板" aria-label="Permalink to &quot;uni-app 项目模板&quot;">​</a></h3><p><a href="https://github.com/wkl007/uni-app-template" target="_blank" rel="noreferrer">uni-app-template</a></p><h3 id="vant-项目模板" tabindex="-1">vant 项目模板 <a class="header-anchor" href="#vant-项目模板" aria-label="Permalink to &quot;vant 项目模板&quot;">​</a></h3><p><a href="https://github.com/wkl007/vue-wechat-template" target="_blank" rel="noreferrer">vue-vant-template</a></p>`,18),t=[l];function i(o,r,c,d,h,u){return s(),n("div",null,t)}const b=a(p,[["render",i]]);export{m as __pageData,b as default};
