import{_ as t,c as l,o,a2 as i}from"./chunks/framework.DlC1fzyH.js";const u=JSON.parse('{"title":"培训/知识管理/技术沉淀","description":"","frontmatter":{},"headers":[],"relativePath":"web/chapter11.md","filePath":"web/chapter11.md"}'),r={name:"web/chapter11.md"},a=i('<h1 id="培训-知识管理-技术沉淀" tabindex="-1">培训/知识管理/技术沉淀 <a class="header-anchor" href="#培训-知识管理-技术沉淀" aria-label="Permalink to &quot;培训/知识管理/技术沉淀&quot;">​</a></h1><p>我觉得一个团队的知识管理是非常重要的。你要问一个刚入行的新手加入团队希望得到什么？很多人的回答是&#39;学习&#39;, 希望自己的技术可以更加精进, 钱倒还是其次。</p><p>然而现实是目前很多公司的氛围并不是这样的，一天到晚写业务代码、工作量大、每天做重复的事情，而且还加班，工作多年技术也没感觉有多少进步, 确实会让人非常沮丧。包括笔者也是这样的。</p><h2 id="新人培训" tabindex="-1">新人培训 <a class="header-anchor" href="#新人培训" aria-label="Permalink to &quot;新人培训&quot;">​</a></h2><p>如果团队有规范的新成员培训手册，可以节省很多培训的时间，避免每次重复口述一样的内容。培训手册包含以下内容:</p><ul><li><strong>产品架构与组织架构</strong>. 介绍公司背景和产品，一般组织的团队结构和产品的架构是相关联的。 例如下图:</li></ul><p><img src="https://pic-go-1256738511.cos.ap-chengdu.myqcloud.com/images/20201103160803.png" alt="chapter11_1"></p><ul><li><strong>产品研发流程</strong>: 介绍产品开发和迭代会涉及到的流程、以及团队之间的协作衔接，例如:</li></ul><p><img src="https://pic-go-1256738511.cos.ap-chengdu.myqcloud.com/images/20201103160809.png" alt="chapter11_2"></p><ul><li><strong>工作范围</strong>: 团队成员的职责范围</li><li><strong>建立资源索引</strong>: 开发需要设计到的资源，比如各种文档地址、研发系统入口(例如gitlab、bug跟踪系统、文件共享、发布平台、开发/测试环境、监控系统)、协作规范等等。将这些资源整理好可以减少不必要的沟通成本</li><li><strong>规范</strong>: 即本文的主体&#39;前端协作规范&#39;。有规范可循，可以让成员以较快的速度入手开发、同时也减少培训成本投入。</li></ul><p>培训手册将可以文档具象化的内容整理为文档，和上文说到的Code Review一样，一些东西无法通过文档来说明，所以我们一般会搭配一个‘培训导师’，在试用期间，一对一辅导。</p><h2 id="营造技术氛围" tabindex="-1">营造技术氛围 <a class="header-anchor" href="#营造技术氛围" aria-label="Permalink to &quot;营造技术氛围&quot;">​</a></h2><ul><li><p><strong>鼓励成员写技术博客，或者建立自己的团队专栏</strong>.。写一篇好的文章不容易。</p></li><li><p><strong>鼓励参与开源项目</strong></p></li><li><p><strong>建立面试题库</strong> 组织一起解一些面试题或算法题，加深对知识点的理解。</p></li><li><p><strong>定期的专题分享</strong>. 鼓励团队成员定期进行专题学习和研究，编写技术博客，并将学习的成果分享给其他成员。这是一种抱团取暖的学习方式，旨在帮助团队成员一起学习和成长。</p></li></ul><p>​ 比如开发老手可以分享自己的经验，研究更深层次的技术；新手则可以研究某些开发技巧、新技术，例如CSS Grid，svg动画等等。推荐团队成员有个明确的研究领域，这样分工合作可以学习到更多东西。</p><p>​ <strong>专题怎么来?</strong></p><ol><li>专题请求. 可以请求其他成员完成专题，比如比较深的知识，可以要求团队比较有经验的进行学习分享。</li><li>学习总结。</li><li>项目回顾。</li><li>难点攻克。</li><li>项目规范。</li><li>工具使用。</li></ol><ul><li><p><strong>落实和完善开发规范</strong>. 规范本身就是团队知识沉淀的一种直接输出。</p></li><li><p><strong>图书分享</strong>. 和离散的文章或教程相比，图书的知识会比较系统，另外很多经典的图书是要静下来好好欣赏的。</p></li><li><p><strong>鼓励重构和持续优化代码</strong></p></li><li><p><strong>抽象一套基础库或框架，减少重复工作, 提高工作效率</strong>。不加班先从提高工作效率开始。</p></li></ul>',17),e=[a];function s(n,p,c,g,h,_){return o(),l("div",null,e)}const m=t(r,[["render",s]]);export{u as __pageData,m as default};
