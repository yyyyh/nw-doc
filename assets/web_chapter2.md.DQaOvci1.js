import{_ as l,c as i,o as a,a2 as e}from"./chunks/framework.DlC1fzyH.js";const _=JSON.parse('{"title":"技术栈规范","description":"","frontmatter":{},"headers":[],"relativePath":"web/chapter2.md","filePath":"web/chapter2.md"}'),t={name:"web/chapter2.md"},r=e('<h1 id="技术栈规范" tabindex="-1">技术栈规范 <a class="header-anchor" href="#技术栈规范" aria-label="Permalink to &quot;技术栈规范&quot;">​</a></h1><p>团队的开发效率是基于稳定且熟练的技术栈。稳定的技术栈规范有利于团队协作和沟通。我们对新的技术是完全开放的，一般而言， 新的技术， 新的解决方案，总是为了更高的生产力而诞生的。 我们容纳一个新的技术选型会有以下几点考虑：</p><ul><li>学习成本。考虑团队成员的接纳能力。如果成本小于收获的利益，在团队里面推行估计阻力会比较大。</li><li>收益。是否能够解决当前的某些痛点。</li><li>考虑风险。一般我们不会将一个实验阶段的技术使用的生产环境中。</li></ul><h2 id="语言" tabindex="-1">语言 <a class="header-anchor" href="#语言" aria-label="Permalink to &quot;语言&quot;">​</a></h2><ul><li>Javascript <ul><li>主要使用 ECMAScript 2016+规范</li></ul></li><li>Typescript <ul><li>目前未使用 Typescript，Vue 3.0 发布稳定后会在合适的时机引入 Typescript</li></ul></li></ul><h2 id="框架" tabindex="-1">框架 <a class="header-anchor" href="#框架" aria-label="Permalink to &quot;框架&quot;">​</a></h2><ul><li>Vue</li><li>小程序框架 <ul><li>uni-app</li></ul></li><li>生态 <ul><li>路由 <ul><li>vue-router</li></ul></li><li>状态管理 <ul><li>vuex</li><li>pinia</li></ul></li><li>UI 框架 <ul><li>Ant Design Vue</li><li>uView</li><li>Vant</li></ul></li><li>数据可视化 <ul><li>AntV</li><li>ECharts</li></ul></li></ul></li></ul><h2 id="样式" tabindex="-1">样式 <a class="header-anchor" href="#样式" aria-label="Permalink to &quot;样式&quot;">​</a></h2><ul><li>命名规范 <ul><li>BEM</li></ul></li><li>pre-compiler <ul><li>LESS</li></ul></li><li>SCSS</li><li>UnoCSS</li></ul><h2 id="lint" tabindex="-1">Lint <a class="header-anchor" href="#lint" aria-label="Permalink to &quot;Lint&quot;">​</a></h2><ul><li>ESlint</li><li>stylelint</li></ul><h2 id="构建" tabindex="-1">构建 <a class="header-anchor" href="#构建" aria-label="Permalink to &quot;构建&quot;">​</a></h2><ul><li>vite</li><li>webpack</li><li>babel</li><li>PWA</li></ul><h2 id="包管理" tabindex="-1">包管理 <a class="header-anchor" href="#包管理" aria-label="Permalink to &quot;包管理&quot;">​</a></h2><ul><li>npm</li><li>pnpm</li></ul><h2 id="开发工具" tabindex="-1">开发工具 <a class="header-anchor" href="#开发工具" aria-label="Permalink to &quot;开发工具&quot;">​</a></h2><ul><li>Visual Studio Code</li><li>WebStorm</li></ul><h2 id="文档生成" tabindex="-1">文档生成 <a class="header-anchor" href="#文档生成" aria-label="Permalink to &quot;文档生成&quot;">​</a></h2><ul><li>vitePress</li></ul><h2 id="版本管理" tabindex="-1">版本管理 <a class="header-anchor" href="#版本管理" aria-label="Permalink to &quot;版本管理&quot;">​</a></h2><ul><li>git</li></ul><h2 id="vue-开发规范" tabindex="-1">Vue 开发规范 <a class="header-anchor" href="#vue-开发规范" aria-label="Permalink to &quot;Vue 开发规范&quot;">​</a></h2><ul><li><p><a href="https://vuejs.ac.cn/style-guide/" target="_blank" rel="noreferrer">Vue.js 风格指南</a></p></li><li><p><a href="https://juejin.im/post/5ada9b586fb9a07aaf34c746" target="_blank" rel="noreferrer">Vue 前端开发规范</a></p></li></ul>',23),u=[r];function o(n,h,s,c,d,p){return a(),i("div",null,u)}const f=l(t,[["render",o]]);export{_ as __pageData,f as default};
