import{_ as e,c as r,o as t,a2 as a}from"./chunks/framework.DpuVf8Pb.js";const m=JSON.parse('{"title":"UI 设计规范","description":"","frontmatter":{},"headers":[],"relativePath":"web/chapter7.md","filePath":"web/chapter7.md"}'),i={name:"web/chapter7.md"},l=a('<h1 id="ui-设计规范" tabindex="-1">UI 设计规范 <a class="header-anchor" href="#ui-设计规范" aria-label="Permalink to &quot;UI 设计规范&quot;">​</a></h1><p><img src="https://pic-go-1256738511.cos.ap-chengdu.myqcloud.com/images/20201103160008.png" alt="chapter7_1"></p><p>这是一个容易被忽略的规范类型。笔者就深受其苦，我们公司初期没有所谓的设计规范，这就导致他们设计出来的产品前后不统一，多个应用之间的组件不能复用。这搞得我们不得不浪费时间，写很多定制化样式和组件。</p><p>关于 UI 设计规范的重要性有兴趣的读者可以看这篇文章：<a href="https://juejin.im/post/5b766ac56fb9a009aa154c27" target="_blank" rel="noreferrer">开发和设计沟通有多难？ - 你只差一个设计规范</a>.</p><p>简单总结一下 UI 设计规范的意义：</p><ul><li>提供团队协作效率(产品和开发)</li><li>提高组件的复用率. 统一的组件规范可以让组件更好管理</li><li>保持产品迭代过程中品牌一致性</li></ul><p>建立一个定义良好的设计规范需要<code>UI设计和开发</code>的紧密配合，有时候也可以由我们前端来推动。</p><p>比如很多开源的 UI 框架，一开始都是开发者 YY 出来的，并没有设计参与，后来组件库慢慢沉淀成型，UI 设计师才介入规范一下。</p><p>关于 UI 规范推荐使用现成的开源组件库：</p><ul><li><a href="https://www.antdv.com/docs/vue/introduce-cn" target="_blank" rel="noreferrer">Ant Design Vue</a></li><li><a href="https://ant.design/index-cn" target="_blank" rel="noreferrer">Ant Design</a></li><li><a href="https://material-ui.com" target="_blank" rel="noreferrer">Material-UI</a></li><li><a href="https://element.eleme.io" target="_blank" rel="noreferrer">Element UI</a></li><li><a href="https://weui.io" target="_blank" rel="noreferrer">WeUI</a></li><li><a href="https://developer.microsoft.com/en-us/fabric#/" target="_blank" rel="noreferrer">Microsoft Fabric</a></li></ul><p>这些开源组件库都经过良好的设计和沉淀, 而且配套了完善的设计原则、最佳实践和设计资源文件（Sketch 和 Axure），可以帮助业务快速设计出高质量的产品原型。</p>',11),n=[l];function o(c,p,s,_,h,f){return t(),r("div",null,n)}const u=e(i,[["render",o]]);export{m as __pageData,u as default};
